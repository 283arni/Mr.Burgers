(function () {
  //accordeon team

  const items = document.querySelectorAll('.accordeon__item');

  for (item of items) {
    item.addEventListener('click', mainFunc);
  }

  //accordeon menu
  const itemsMenu = document.querySelectorAll('.accordeon__list');

  for (itemMenu of itemsMenu) {
    itemMenu.addEventListener('click', mainFunc);
  }

  //mainFuncsions
  function mainFunc(e) {
    e.preventDefault();
    const li = e.currentTarget;

    if (li.classList.contains('active')) {
      closeAndRemoveActive(items);
      closeAndRemoveActive(itemsMenu)
    } else {
      closeAndRemoveActive(items);
      closeAndRemoveActive(itemsMenu)
      openAndCreatActive(li);
    }
  }


  function openAndCreatActive(obj) {
    const info = obj.querySelector('.accordeon__who');
    const desc = obj.querySelector('.accordeon__desc-hid')
    obj.classList.add('active');
    if (info) {
      info.style.height = '100%';
    } else {
      desc.style.width = '100%';
    }
  }

  function closeAndRemoveActive(obj) {
    Array.from(obj).forEach(elem => {
      elem.classList.remove('active');
      if (obj == items) {
        elem.querySelector('.accordeon__who').style.height = 0;
      } else {
        elem.querySelector('.accordeon__desc-hid').style.width = 0;
      }
    });
  }
})();;ymaps.ready(init);

var myPlacemarks = [{
    coords: 59.938433,
    coords2: 30.306681,
    hint: "Бургеры на Адмиралтейской набережной, 10"
  },
  {
    coords: 59.966402,
    coords2: 30.311461,
    hint: "Бургеры на Каменноостровском проспекте, 37"
  },
  {
    coords: 59.946715, 
    coords2: 30.434368,
    hint: "Бургеры на проспекте Энергетиков, 16"
  }
]

function init() {
  var myMap = new ymaps.Map("map", {
    center: [59.939095, 30.315868],
    zoom: 12,
    controls: ['geolocationControl','zoomControl','searchControl']
  });
  myMap.behaviors.disable('scrollZoom'); 
  myPlacemarks.forEach(function (obj) {
    var myPlacemark = new ymaps.Placemark([obj.coords, obj.coords2], {
      hintContent: obj.hint
    }, {
      iconLayout: 'default#image',
      iconImageHref: '/images/contacts/map-marker.svg',
      iconImageSize: [46, 57]
    });
    myMap.geoObjects
      .add(myPlacemark);
  })
};(function(){
// opened menu for phone
const menu = document.querySelector('.nav__little');
const fullMenu = document.querySelector('.hamburger');
const closeMenu = document.querySelector('.hamburger .close__link');

menu.addEventListener('click', function (event) {
  event.preventDefault();
  fullMenu.style.display = 'flex';
});

closeMenu.addEventListener('click', function (event) {
  event.preventDefault();
  fullMenu.style.display = 'none';
});

fullMenu.addEventListener('click', function (event) {
  if (event.target === fullMenu) {
    closeMenu.click();
  }
});

$('[data-skroll]').on('click', function (e) {
  fullMenu.style.display = 'none';
});
})();
;(function(){
// modal window

const modal = document.querySelector('#modal-popup').innerHTML;
const btnRead = document.querySelectorAll('.btn_phone');
const btnRead2 = document.querySelectorAll('.btn_black');
const comment = document.querySelector('.comments__story');
let popMess = document.querySelector('.popup__message')

for (i = 0; i < btnRead.length; i++) {
  btnRead[i].addEventListener('click', function (event) {
    event.preventDefault();

    const block = createBlock(comment.innerHTML);
    document.body.appendChild(block);

  });
}
for (i = 0; i < btnRead2.length; i++) {
  btnRead2[i].addEventListener('click', function (event) {
    event.preventDefault();

    const block = createBlock(comment.innerHTML);
    document.body.appendChild(block);

  });
}

function createBlock(text) {
  const div = document.createElement('div')
  div.classList.add('popup');
  div.innerHTML = modal;
  let popMess = div.querySelector('.popup__message');
  popMess.innerHTML = text;

  const btnClose = div.querySelector('.close__popup .close__link');
  btnClose.addEventListener('click', e => {
    e.preventDefault();
    document.body.removeChild(div);
  });

  div.addEventListener('click', e => {
    if (e.target === div) {
      btnClose.click();
    }
  });

  return div;
}

const isForm = document.querySelector('#form');
const sendBtn = document.querySelector('#sendBtn');

isForm.addEventListener('submit', e => {
  e.preventDefault();

  const form = new FormData(isForm);

  form.append('to', 'mail@mail.com');
  const xhr = new XMLHttpRequest();
  xhr.open('POST', 'https://webdev-api.loftschool.com/sendmail');
  xhr.send(form);
  xhr.addEventListener('load', () => {
    const block = createModal(JSON.parse(xhr.responseText).message);
    if (xhr.status >= 400) {
      document.body.appendChild('Что-то сломалось...');
    } else {
      document.body.appendChild(block);
      deleteModul(block);
    }

  });
})


//create modal for form
function createModal(text) {
  const div = document.createElement('div');
  const input = document.createElement('input');
  div.classList.add('popup');
  div.innerHTML = modal;
  let popMess = div.querySelector('.popup__message');
  popMess.innerHTML = text;

  div.firstElementChild.firstElementChild.remove();
  input.classList.add('btn', 'btn_modal');
  input.type = 'submit'
  input.value = "Закрыть";
  div.firstElementChild.appendChild(input);

  return div
}
//remove modul
function deleteModul(elem) {
  const closeBtnModal = document.querySelector('.btn_modal');
  closeBtnModal.addEventListener('click', e => {
    e.preventDefault();
    document.body.removeChild(elem);
  });
}
})();;(function () {

  //OnePageScroll

  $(document).ready(function () {

    var containerScroll = $('.wrapper'),
      section = $('.section'),
      sliderContainer = $('.maincontainer')

    function scroll(indexSection, posSection) {
      sliderContainer.animate({
          'bottom': indexSection * 100 + 'vh'
        },
        700,
        function () {

          posSection
        }
      )
    }

    function activeDot(index) {
      $('.nav-sections__circle').removeClass('active').eq(index).addClass('active');
    }
    let inscroll = false;

    containerScroll.on('wheel', function (e) {
      e.preventDefault();
      if (inscroll === false) {
        inscroll = true
        var sectionAct = section.filter('.active'),
          nextSection = sectionAct.next(),
          prevSection = sectionAct.prev(),
          indexSection, posSection;


        function scroll(indexSection, posSection) {


          sliderContainer.animate({
              'bottom': indexSection * 100 + 'vh'
            },
            700,
            function () {
              sectionAct.removeClass('active')
              posSection
            }
          )
        }




        if (e.originalEvent.deltaY > 0) {

          if (nextSection.length) {
            indexSection = nextSection.index();
            posSection = nextSection.addClass('active');
          } else {
            indexSection = section.first().index();
            posSection = section.first().addClass('active');
          }
          scroll(indexSection, posSection);
          activeDot(indexSection);

        } else {
          if (prevSection.length) {
            indexSection = prevSection.index();
            posSection = prevSection.addClass('active');
          } else {
            indexSection = section.last().index();
            posSection = section.last().addClass('active');
          }
          scroll(indexSection, posSection);
          activeDot(indexSection);
        }
      }
      setTimeout(() => {
        inscroll = false
      }, 1500) // Время на откат события wheel
    });


    $('[data-skroll]').on('click', function (e) {
      e.preventDefault();
      const indexLink = $(this).attr('data-skroll')
      section.removeClass('active');
      const posActiv = $('.section').eq(indexLink).addClass('active');
      scroll(indexLink, posActiv);
      activeDot(indexLink);
    });

    function touchAndKey(keyCode, direction) {
      let imitationClick = $('.nav-sections__circle').filter('.active');

      if (keyCode == 40 || direction == 'up') {
        imitationClick.next().click();
      }
      if (keyCode == 38 || direction == 'down') {
        imitationClick.prev().click()
      }
    }

    $(document).on('keydown', (e) => {


      switch (e.keyCode) {
        case 40:
          e.preventDefault()
          touchAndKey(e.keyCode)
          break;
        case 38:
          e.preventDefault()
          touchAndKey(e.keyCode)
          break;
      }
    });

    var md = new MobileDetect(window.navigator.userAgent);
    const isMobile = md.mobile();

    if (isMobile) {
      $('.maincontainer').swipe({
        swipe: function (event, direction) {
          touchAndKey('', direction)
        }
      });
    }
  });
})();;const video = document.querySelector('.video__burger'),
  player = document.querySelector('.video__controls'),
  play = document.querySelector('.video__start'),
  trackDot = document.querySelector('.video__track-dot'),
  track = document.querySelector('.video__line'),
  volume = document.querySelector('.video__volume'),
  volumeTrack = document.querySelector('.video__volume-line'),
  volumeDot = document.querySelector('.video__volume-dot'),
  playScreen = document.querySelector('.video__play-screen')


function defaultVolume() {
  const vol = video.volume = 0.2;
  volumeDot.style.left = Math.floor(vol * volumeTrack.clientWidth) + 'px';
}

function playPause() {
  (video.paused) ? video.play(): video.pause();
  player.classList.toggle('pause');
}

function timeUpdate() {
  const progress = Math.floor(video.currentTime) / Math.floor(video.duration);
  trackDot.style.left = `${Math.floor(progress * track.clientWidth)}px`;
}

function setCurrentTime(e) {
  const x = e.offsetX / track.clientWidth;
  video.currentTime = x * video.duration;
}

function muted(e) {
  e.currentTarget.classList.toggle('mute')
  video.muted = !video.muted;
}

function setVolume(e) {
  volumeDot.style.left = `${e.offsetX}px`;
  video.volume = e.offsetX / e.currentTarget.clientWidth;
}
video.addEventListener('canplaythrough', function () {
  defaultVolume();
});
play.addEventListener('click', function () {
  playPause()
});
playScreen.addEventListener('click', function () {
  playPause()
});
video.addEventListener('timeupdate', function () {
  timeUpdate();
});
track.addEventListener('click', function (e) {
  setCurrentTime(e);
});
volume.addEventListener('click', function (e) {
  muted(e);
});
volumeTrack.addEventListener('click', function (e) {
  setVolume(e);
});


;(function(){

// slider jquery
$(document).ready(function () {

  var slider = function (container, numberItem) {
    var $this = $(this),

      items = container.find('.burgers__slider-item'),
      activeItem = items.filter('.active'),
      nextItem = items.eq(numberItem),
      indexItem = nextItem.index(),
      list = container.find('.burgers__slider');

    if (nextItem.length) {
      list.animate({
          'right': indexItem * 100 + '%',
        },
        'fast',
        function () {
          activeItem.removeClass('active'),
            nextItem.addClass('active')
        }
      )
    }
  }

  $('.burgers__btn').on('click', function (e) {
    e.preventDefault();
    var container = $('.burgers__window'),
      items = $('.burgers__slider-item', container),
      actItem = items.filter('.active'),
      numItem, positionItem, reqItem;

    if ($(this).hasClass('burgers__right')) {
      numItem = actItem.next();
      positionItem = items.first();
    }

    if ($(this).hasClass('burgers__left')) {
      numItem = actItem.prev();
      positionItem = items.last();
    }

    reqItem = numItem.length ? numItem.index() : positionItem.index()
    slider(container, reqItem);
  });
});
})();